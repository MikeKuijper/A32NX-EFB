[{"C:\\Dev\\React\\EFB\\src\\index.js":"1","C:\\Dev\\React\\EFB\\src\\Home.tsx":"2","C:\\Dev\\React\\EFB\\src\\AppIcon.tsx":"3","C:\\Dev\\React\\EFB\\src\\modules\\modules.js":"4","C:\\Dev\\React\\EFB\\src\\modules\\arachne\\index.tsx":"5","C:\\Dev\\React\\EFB\\src\\modules\\performance\\index.tsx":"6","C:\\Dev\\React\\EFB\\src\\modules\\airportinfo\\index.tsx":"7","C:\\Dev\\React\\EFB\\src\\modules\\settings\\index.tsx":"8"},{"size":1278,"mtime":1609337437329,"results":"9","hashOfConfig":"10"},{"size":2521,"mtime":1609336447894,"results":"11","hashOfConfig":"10"},{"size":850,"mtime":1609338244993,"results":"12","hashOfConfig":"10"},{"size":555,"mtime":1609335924702,"results":"13","hashOfConfig":"10"},{"size":2835,"mtime":1609322737571,"results":"14","hashOfConfig":"10"},{"size":2095,"mtime":1609155978945,"results":"15","hashOfConfig":"10"},{"size":2103,"mtime":1609157975197,"results":"16","hashOfConfig":"10"},{"size":6941,"mtime":1609335674261,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"g4ngkk",{"filePath":"21","messages":"22","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},"C:\\Dev\\React\\EFB\\src\\index.js",[],["41","42"],"C:\\Dev\\React\\EFB\\src\\Home.tsx",["43","44","45","46","47","48","49"],"import React from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './Home.css';\nimport BatteryIcon from './assets/battery.svg'\nimport WifiIcon from './assets/wifi-2.svg'\nimport HomeIcon from './assets/home.svg'\nimport BackIcon from './assets/back.svg'\nimport { AppIcon } from './AppIcon'\nimport modules from \"./modules/modules.js\";\nimport { forEachLeadingCommentRange } from 'typescript';\n\nexport const Header: React.FC = () => {\nvar date = new Date();\nvar hours = date.getUTCHours();\nvar minutes = date.getUTCMinutes();\nreturn (\n  <header className=\"header\">\n    <div className=\"row\">\n      <div className=\"header-column span-left\">\n        <p className=\"header-text\">flyPad</p>\n      </div>\n      <div className=\"header-column span-center\">\n        <p className=\"header-text\">{hours > 9 ? hours : \"0\"+hours}:{minutes > 9 ? minutes : \"0\"+minutes}z</p>\n      </div>\n      <div className=\"header-column span-right\">\n        <p className=\"header-text\">Horizon Wireless</p>\n        <p className=\"header-text\">100%</p>\n      </div>\n    </div> \n  </header>);\n}\n\nexport const Footer: React.FC = () => {\nreturn (\n  <footer className=\"footer\">\n    <span>\n      <Link to=\"/\"><img className=\"footer-icon\" src={HomeIcon} alt=\"tbd\"></img></Link>\n    </span>\n  </footer>);\n}\n\nexport class Home extends React.Component {\n  scriptLoaded() {\n    \n  }\n\n  componentDidMount() {\n    const script = document.createElement(\"script\");\n    script.src = `${process.env.PUBLIC_URL}/lib/flickity.pkgd.min.js`;\n    script.async = true;\n    script.onload = () => this.scriptLoaded();\n  \n    document.body.appendChild(script);\n  }\n  \n  render() {\n    let homeIcons = [];\n    for (let i in modules) {\n      let route = (<AppIcon moduleName={modules[i].module} />)\n      homeIcons.push(route);\n    }\n\n    let iconsPerPage = 20;\n    let homeIconsStructured = [];\n    for (let i = 0; i < Math.ceil(homeIcons.length / iconsPerPage); i++) {\n      let page = [];\n      for (let j = 0; j < iconsPerPage; j++) {\n        page.push(homeIcons[i * iconsPerPage + j]);\n      }\n      homeIconsStructured.push(page);\n    }\n\n    let pages = [];\n    for (let i in homeIconsStructured) {\n      let page = <div className=\"gallery-cell grid-container\">{homeIconsStructured[i]}</div>\n      pages.push(page);\n    }\n  \n    return (\n    <div className=\"Home\">\n      <div className=\"content\">\n        <div className=\"js-flickity fullscreen\">\n          {pages}\n        </div>\n      </div>\n    </div>);\n  }\n}\n\nexport default Home;",["50","51"],"C:\\Dev\\React\\EFB\\src\\AppIcon.tsx",["52","53","54"],"C:\\Dev\\React\\EFB\\src\\modules\\modules.js",[],"C:\\Dev\\React\\EFB\\src\\modules\\arachne\\index.tsx",[],"C:\\Dev\\React\\EFB\\src\\modules\\performance\\index.tsx",["55"],"import * as React from 'react';\r\nimport \"./style.css\";\r\n//import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nexport class App extends React.Component {\r\n    path: String = \"/arachne\";\r\n    url: any = \"https://flybywiresim.com\";\r\n\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        var url = event.target.url.value;\r\n        url = (url.startsWith(\"https://\")) ? url : \"https://\" + url;\r\n        // this.url = url;\r\n        console.log(url);\r\n        var viewport = document.getElementById(\"viewport\");\r\n        viewport?.setAttribute(\"data\", url);\r\n    }\r\n\r\n    render() {\r\n        var url = this.url;\r\n        return (\r\n            <div className=\"app-content\" >\r\n                Performance\r\n            </div>\r\n        )\r\n      }\r\n}\r\n\r\n\r\n// const Arachne: React.FC = ({}) => {\r\n//   const [url, setURL] = React.useState<String>();\r\n\r\n//   return (\r\n//         <div className=\"app-content\" >\r\n//             <div className=\"full-width app-header\">\r\n//                 <input id=\"urlbar\" type=\"text\" className=\"input\" value=\"https://wikipedia.com\" onChange={event => setURL(event.target.value)} onKeyDown={(event) => {\r\n//                     console.log(event.key);\r\n//                     if (event.key == \"Enter\") {\r\n//                         event.preventDefault();\r\n//                         let viewport = document.getElementById(\"viewport\");\r\n//                         let urlbar = document.getElementById(\"urlbar\");\r\n//                         console.log(viewport, urlbar);\r\n//                         // viewport?.setAttribute(\"src\", url);\r\n//                         // document.getElementById(\"viewport\").src = document.getElementById(\"urlbar\").value;\r\n//                         // document.getElementById(\"viewport\").contentWindow.history.go(-1); // back\r\n//                     }\r\n//                 }}></input>\r\n//             </div>\r\n//             <embed id=\"viewport\" type=\"text/html\" src=\"https://wikipedia.com\" className=\"fullscreen\">\r\n//             </embed>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default App;\r\n",["56","57"],"C:\\Dev\\React\\EFB\\src\\modules\\airportinfo\\index.tsx",["58"],"import * as React from 'react';\r\nimport \"./style.css\";\r\n//import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nexport class App extends React.Component {\r\n    path: String = \"/arachne\";\r\n    url: any = \"https://flybywiresim.com\";\r\n\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        var url = event.target.url.value;\r\n        url = (url.startsWith(\"https://\")) ? url : \"https://\" + url;\r\n        // this.url = url;\r\n        console.log(url);\r\n        var viewport = document.getElementById(\"viewport\");\r\n        viewport?.setAttribute(\"data\", url);\r\n    }\r\n\r\n    render() {\r\n        var url = this.url;\r\n        return (\r\n            <div className=\"app-content\" >\r\n                Airport Information\r\n            </div>\r\n        )\r\n      }\r\n}\r\n\r\n\r\n// const Arachne: React.FC = ({}) => {\r\n//   const [url, setURL] = React.useState<String>();\r\n\r\n//   return (\r\n//         <div className=\"app-content\" >\r\n//             <div className=\"full-width app-header\">\r\n//                 <input id=\"urlbar\" type=\"text\" className=\"input\" value=\"https://wikipedia.com\" onChange={event => setURL(event.target.value)} onKeyDown={(event) => {\r\n//                     console.log(event.key);\r\n//                     if (event.key == \"Enter\") {\r\n//                         event.preventDefault();\r\n//                         let viewport = document.getElementById(\"viewport\");\r\n//                         let urlbar = document.getElementById(\"urlbar\");\r\n//                         console.log(viewport, urlbar);\r\n//                         // viewport?.setAttribute(\"src\", url);\r\n//                         // document.getElementById(\"viewport\").src = document.getElementById(\"urlbar\").value;\r\n//                         // document.getElementById(\"viewport\").contentWindow.history.go(-1); // back\r\n//                     }\r\n//                 }}></input>\r\n//             </div>\r\n//             <embed id=\"viewport\" type=\"text/html\" src=\"https://wikipedia.com\" className=\"fullscreen\">\r\n//             </embed>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default App;\r\n","C:\\Dev\\React\\EFB\\src\\modules\\settings\\index.tsx",["59","60","61","62","63","64","65","66","67","68","69"],"import * as React from 'react';\r\nimport { BrowserRouter as Router, Route, Link, RouteProps, RouteComponentProps } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nimport settingsConfig from \"../../index\";\r\n\r\n\r\ninterface propertyProps {\r\n    \"id\"?: string,\r\n    \"name\"?: String,\r\n    \"type\"?: String,\r\n    \"value\"?: any,\r\n    \"onChange\"?: (e: any) => void,\r\n    \"onClick\"?: (e: any) => void\r\n}\r\n\r\ninterface menuEntryProps {\r\n    \"name\": string,\r\n    \"isActive\"?: boolean,\r\n    \"url\"?: string\r\n}\r\n\r\n// let globalPage: string;\r\n// let globalPreviousPage: string;\r\n\r\nexport const Property: React.FC<propertyProps> = ({id, name, type, value, onChange, onClick}) => {\r\n    if (type) {\r\n        switch (type) {\r\n            default:\r\n                return (\r\n                    <div className=\"row\">\r\n                        <div className=\"settings-property-column-left\">\r\n                            <p className=\"settings-description-text\">{name}</p>\r\n                        </div>\r\n                        <div className=\"settings-property-column-right\">\r\n                            <div className=\"settings-container\">\r\n                                <input id={id} type=\"text\" className=\"settings-input\" value={value} onChange={onChange} onClick={onClick}></input>\r\n                            </div>\r\n                        </div>\r\n                    </div>);\r\n                    break;\r\n            case \"button-full-width\":\r\n                return (<div className=\"row\">\r\n                        <div className=\"full-width\">\r\n                            <div className=\"settings-container\">\r\n                                <button id={id} className=\"settings-button\" onChange={onChange} onClick={onClick}>{name}</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>);\r\n                break;\r\n            case \"information\":\r\n                return (<div className=\"row\">\r\n                            <div className=\"settings-property-column-left\">\r\n                                <p className=\"settings-description-text\">{name}</p>\r\n                            </div>\r\n                            <div className=\"settings-property-column-right\">\r\n                                <div className=\"settings-container no-padding\">\r\n                                    <p className=\"settings-text\" onClick={onClick}>{value}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>);\r\n                break;\r\n            case \"boolean\":\r\n                return (<div className=\"row\">\r\n                            <div className=\"settings-property-column-left\">\r\n                                <p className=\"settings-description-text\">{name}</p>\r\n                            </div>\r\n                            <div className=\"settings-property-column-right\">\r\n                                <div className=\"settings-container\">\r\n                                    <input id={id} type=\"checkbox\" className=\"settings-checkbox\" checked={value} onChange={onChange} onClick={onChange}></input>\r\n                                </div>\r\n                            </div>\r\n                        </div>);\r\n                    break;\r\n        }\r\n    } else {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"settings-property-column-left\">\r\n                    <p className=\"settings-description-text\">{name}</p>\r\n                </div>\r\n                <div className=\"settings-property-column-right\">\r\n                    <a href=\"#\">{value}</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const MenuEntry: React.FC<menuEntryProps> = ({name, isActive, url}) => {\r\n    return (\r\n        <Link to={(url) ? url : \"#\"}><a href=\"#\" className={(isActive) ? \"active\" : \"\"}>{name}</a></Link>\r\n    );\r\n}\r\n\r\n\r\ninterface settingsFormProps {\r\n    page: string\r\n}\r\n\r\ninterface settingsFormState {\r\n    settings: any\r\n}\r\n\r\nexport class SettingsForm extends React.Component<settingsFormProps, settingsFormState> {\r\n    props: settingsFormProps;\r\n    \r\n    constructor (props: settingsFormProps) {\r\n        super (props);\r\n        this.props = props;\r\n\r\n        let settings = settingsConfig.categories.find((element) => { return element.id === props.page })?.settings;\r\n        this.state = {\r\n            settings: settings\r\n        }\r\n    }\r\n\r\n    public handleChange = (e: any) : void => {\r\n        if(e.target.type == \"checkbox\") settingsConfig.categories[globalPageID].settings[e.target.id].value = e.target.checked;\r\n        else settingsConfig.categories[globalPageID].settings[e.target.id].value = e.target.value;\r\n        this.setState({});\r\n    }\r\n\r\n    render() {\r\n        let settings = [];\r\n        for (let i in settingsConfig.categories[globalPageID].settings) {\r\n            let setting = settingsConfig.categories[globalPageID].settings[parseInt(i)];\r\n            let prop = <Property id={i} name={setting.name} value={setting.value} type={setting.type} onChange={this.handleChange}/>;\r\n            settings.push(prop);\r\n        }\r\n\r\n        return (\r\n            <div className=\"settings\">\r\n                {settings}\r\n                <Property name=\"Apply changes\" type=\"button-full-width\" onClick={() => {console.log(\"click\")}}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\ninterface appProps extends RouteComponentProps {\r\n    \r\n}\r\n\r\ninterface appState {\r\n\r\n}\r\n\r\n\r\nlet globalPageID: number;\r\nexport class App extends React.Component<appProps, appState> {\r\n    render() {\r\n        const page = (this.props.match.params as any).page || \"general\";\r\n        const pageID = settingsConfig.categories.findIndex((element) => { return element.id === page });\r\n        globalPageID = pageID;\r\n\r\n        let menuEntries = [];\r\n        for (let i in settingsConfig.categories) {\r\n            let menuEntry = <MenuEntry name={settingsConfig.categories[i].name} url={`/settings/${settingsConfig.categories[i].id}`} isActive={settingsConfig.categories[i].id == page}></MenuEntry>;\r\n            menuEntries.push(menuEntry);\r\n        }\r\n\r\n        return (\r\n            <div className=\"app-content settings-content\" >\r\n                <div className=\"full-width settings-app-header\">\r\n                    <p className=\"settings-title\">Settings</p>\r\n                </div>\r\n                <div className=\"fullscreen\">\r\n                    <div className=\"row\">\r\n                        <div className=\"settings-column-left\">\r\n                            <div className=\"settings-vertical-menu\">\r\n                                {menuEntries}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"settings-column-right\">\r\n                            <SettingsForm page={page}></SettingsForm>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":27,"nodeType":"76","messageId":"77","endLine":2,"endColumn":33},{"ruleId":"74","severity":1,"message":"78","line":2,"column":35,"nodeType":"76","messageId":"77","endLine":2,"endColumn":41},{"ruleId":"74","severity":1,"message":"79","line":2,"column":43,"nodeType":"76","messageId":"77","endLine":2,"endColumn":48},{"ruleId":"74","severity":1,"message":"80","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":19},{"ruleId":"74","severity":1,"message":"81","line":5,"column":8,"nodeType":"76","messageId":"77","endLine":5,"endColumn":16},{"ruleId":"74","severity":1,"message":"82","line":7,"column":8,"nodeType":"76","messageId":"77","endLine":7,"endColumn":16},{"ruleId":"74","severity":1,"message":"83","line":10,"column":10,"nodeType":"76","messageId":"77","endLine":10,"endColumn":36},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":3,"column":27,"nodeType":"76","messageId":"77","endLine":3,"endColumn":33},{"ruleId":"74","severity":1,"message":"78","line":3,"column":35,"nodeType":"76","messageId":"77","endLine":3,"endColumn":41},{"ruleId":"74","severity":1,"message":"79","line":3,"column":43,"nodeType":"76","messageId":"77","endLine":3,"endColumn":48},{"ruleId":"74","severity":1,"message":"84","line":20,"column":13,"nodeType":"76","messageId":"77","endLine":20,"endColumn":16},{"ruleId":"70","replacedBy":"85"},{"ruleId":"72","replacedBy":"86"},{"ruleId":"74","severity":1,"message":"84","line":20,"column":13,"nodeType":"76","messageId":"77","endLine":20,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":2,"column":27,"nodeType":"76","messageId":"77","endLine":2,"endColumn":33},{"ruleId":"74","severity":1,"message":"79","line":2,"column":35,"nodeType":"76","messageId":"77","endLine":2,"endColumn":40},{"ruleId":"74","severity":1,"message":"87","line":2,"column":48,"nodeType":"76","messageId":"77","endLine":2,"endColumn":58},{"ruleId":"88","severity":1,"message":"89","line":41,"column":21,"nodeType":"90","messageId":"91","endLine":41,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":50,"column":17,"nodeType":"90","messageId":"91","endLine":50,"endColumn":23},{"ruleId":"88","severity":1,"message":"89","line":62,"column":17,"nodeType":"90","messageId":"91","endLine":62,"endColumn":23},{"ruleId":"88","severity":1,"message":"89","line":74,"column":21,"nodeType":"90","messageId":"91","endLine":74,"endColumn":27},{"ruleId":"92","severity":1,"message":"93","line":83,"column":21,"nodeType":"94","endLine":83,"endColumn":33},{"ruleId":"92","severity":1,"message":"93","line":92,"column":38,"nodeType":"94","endLine":92,"endColumn":89},{"ruleId":"95","severity":1,"message":"96","line":119,"column":26,"nodeType":"97","messageId":"98","endLine":119,"endColumn":28},{"ruleId":"95","severity":1,"message":"96","line":159,"column":176,"nodeType":"97","messageId":"98","endLine":159,"endColumn":178},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'BatteryIcon' is defined but never used.","'WifiIcon' is defined but never used.","'BackIcon' is defined but never used.","'forEachLeadingCommentRange' is defined but never used.","'url' is assigned a value but never used.",["99"],["100"],"'RouteProps' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]